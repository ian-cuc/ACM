/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> preorderTraversal(TreeNode *root) {
        // IMPORTANT: Please reset any member data you declared, as
        // the same Solution instance will be reused for each test case.
        stack<TreeNode*> tempStack;
        vector<int> vOutput;
        if(root)
        {
            tempStack.push(root);
            while(!tempStack.empty())
            {
                TreeNode* pNode = tempStack.top();
                assert(pNode);
                vOutput.push_back(pNode->val);
                tempStack.pop();
                if(pNode->right)
                    tempStack.push(pNode->right);
                if(pNode->left)
                    tempStack.push(pNode->left);
            }
        }

        return vOutput;
    }
};
