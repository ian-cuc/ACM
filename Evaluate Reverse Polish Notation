/*Evaluate Reverse Polish Notation
valuate the value of an arithmetic expression in Reverse Polish Notation.

Valid operators are +, -, *, /. Each operand may be an integer or another expression.

Some examples:
  ["2", "1", "+", "3", "*"] -> ((2 + 1) * 3) -> 9
  ["4", "13", "5", "/", "+"] -> (4 + (13 / 5)) -> 6
*/

import java.util.Stack;
public class Solution {
    public int evalRPN(String[] tokens) {
        Stack<Integer> ex=new Stack<Integer>();
        for(String i:tokens)
        {
            if(isNum(i))
            {
                ex.push(stonum(i));
            }
            else
            {
                int first =ex.pop();
                int last=ex.pop();
                switch(i)
                {
                case "+":
                ex.push(last+first);
                break;
                case "/":
                ex.push(last/first);
                break;
                case "*":
                ex.push(last*first);
                break;
                case "-":
                ex.push(last-first);
                break;
                default:
                break;
                }
            }
        }
        return ex.pop();
        
    }
    private boolean isNum(String str)
    {
        if(str.charAt(0)=='-'&&str.length()>1)
        {
            return true;
        }
        else
        {
         for(int i=str.length();--i>=0;)
         {
          int chr=str.charAt(i);
          if(chr<48 || chr>57)
           return false;
          }
         }
      return true;
     }
     private int stonum(String str)
     {
         int num=0;
          if(str.charAt(0)=='-')
          {
              for(int i=str.length()-1;i>0;i--)
                {
                    int tmp=str.charAt(i)-48;
                     for(int j=str.length()-1-i;j>0;j--)
                     {
                         tmp=tmp*10;
                     }
                      num=num+tmp;
                 }
              num=0-num;
          }
          else
          {
             for(int i=str.length()-1;i>=0;i--)
             {
                 int tmp=str.charAt(i)-48;
                 for(int j=str.length()-1-i;j>0;j--)
                 {
                     tmp=tmp*10;
                 }
                 num=num+tmp;
             }
         }
         return num;
     }
}
